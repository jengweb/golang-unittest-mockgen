// Code generated by MockGen. DO NOT EDIT.
// Source: ./gateways/users_gateways.go

// Package gateways is a generated GoMock package.
package gateways

import (
	models "main/gateways/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsersGateways is a mock of UsersGateways interface.
type MockUsersGateways struct {
	ctrl     *gomock.Controller
	recorder *MockUsersGatewaysMockRecorder
}

// MockUsersGatewaysMockRecorder is the mock recorder for MockUsersGateways.
type MockUsersGatewaysMockRecorder struct {
	mock *MockUsersGateways
}

// NewMockUsersGateways creates a new mock instance.
func NewMockUsersGateways(ctrl *gomock.Controller) *MockUsersGateways {
	mock := &MockUsersGateways{ctrl: ctrl}
	mock.recorder = &MockUsersGatewaysMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersGateways) EXPECT() *MockUsersGatewaysMockRecorder {
	return m.recorder
}

// GetUsers mocks base method.
func (m *MockUsersGateways) GetUsers() (*models.UsersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers")
	ret0, _ := ret[0].(*models.UsersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockUsersGatewaysMockRecorder) GetUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockUsersGateways)(nil).GetUsers))
}
